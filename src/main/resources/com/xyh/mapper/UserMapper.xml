<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xyh.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.xyh.domain.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="pwd" property="pwd" jdbcType="INTEGER"/>
        <result column="phone" property="phone" jdbcType="INTEGER"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="money" property="money" jdbcType="INTEGER"/>
        <result column="ele" property="ele" jdbcType="INTEGER"/>
        <result column="water" property="water" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="seluserinfo" type="com.xyh.domain.User">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="pwd" property="pwd" jdbcType="INTEGER"/>
        <result column="phone" property="phone" jdbcType="INTEGER"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="money" property="money" jdbcType="INTEGER"/>
        <result column="ele" property="ele" jdbcType="INTEGER"/>
        <result column="water" property="water" jdbcType="INTEGER"/>
        <association property="userbuy" javaType="com.xyh.domain.Userbuy">
            <result column="bele" property="ele" jdbcType="INTEGER"></result>
            <result column="bwater" property="water" jdbcType="INTEGER"></result>
            <result column="buytimeString" property="buytimestring"></result>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , username, pwd, phone, address, money, ele, water
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xyh.domain.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.xyh.domain.UserExample">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xyh.domain.User">
        insert into user (id, username, pwd,
                          phone, address, money,
                          ele, water)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{pwd,jdbcType=INTEGER},
                #{phone,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{money,jdbcType=INTEGER},
                #{ele,jdbcType=INTEGER}, #{water,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.xyh.domain.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="pwd != null">
                pwd,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="money != null">
                money,
            </if>
            <if test="ele != null">
                ele,
            </if>
            <if test="water != null">
                water,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="pwd != null">
                #{pwd,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="money != null">
                #{money,jdbcType=INTEGER},
            </if>
            <if test="ele != null">
                #{ele,jdbcType=INTEGER},
            </if>
            <if test="water != null">
                #{water,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xyh.domain.UserExample" resultType="java.lang.Integer">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.pwd != null">
                pwd = #{record.pwd,jdbcType=INTEGER},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=INTEGER},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.money != null">
                money = #{record.money,jdbcType=INTEGER},
            </if>
            <if test="record.ele != null">
                ele = #{record.ele,jdbcType=INTEGER},
            </if>
            <if test="record.water != null">
                water = #{record.water,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user
        set id = #{record.id,jdbcType=INTEGER},
        username = #{record.username,jdbcType=VARCHAR},
        pwd = #{record.pwd,jdbcType=INTEGER},
        phone = #{record.phone,jdbcType=INTEGER},
        address = #{record.address,jdbcType=VARCHAR},
        money = #{record.money,jdbcType=INTEGER},
        ele = #{record.ele,jdbcType=INTEGER},
        water = #{record.water,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xyh.domain.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="pwd != null">
                pwd = #{pwd,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="money != null">
                money = #{money,jdbcType=INTEGER},
            </if>
            <if test="ele != null">
                ele = #{ele,jdbcType=INTEGER},
            </if>
            <if test="water != null">
                water = #{water,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xyh.domain.User">
        update user
        set username = #{username,jdbcType=VARCHAR},
            pwd      = #{pwd,jdbcType=INTEGER},
            phone    = #{phone,jdbcType=INTEGER},
            address  = #{address,jdbcType=VARCHAR},
            money    = #{money,jdbcType=INTEGER},
            ele      = #{ele,jdbcType=INTEGER},
            water    = #{water,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="seluserinfo" resultMap="seluserinfo">
        SELECT u.*, ub.ele bele, ub.water bwater, ub.buytimeString
        FROM user u
                 INNER JOIN userbuy ub
                            on u.id = ub.userid
    </select>
    <select id="seluserbuy" resultMap="seluserinfo" parameterType="com.xyh.domain.UserExample">
        SELECT u.*, ub.ele bele, ub.water bwater, ub.buytimeString
        FROM user u
        INNER JOIN userbuy ub
        on u.id = ub.userid
        where u.username = #{record.username,jdbcType=VARCHAR},
    </select>
</mapper>