<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xyh.mapper.UserbuyMapper" >
  <resultMap id="BaseResultMap" type="com.xyh.domain.Userbuy" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="ele" property="ele" jdbcType="INTEGER" />
    <result column="water" property="water" jdbcType="INTEGER" />
    <result column="buytime" property="buytime" jdbcType="TIMESTAMP" />
    <result column="buytimeString" property="buytimestring" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userid, ele, water, buytime, buytimeString
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xyh.domain.UserbuyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userbuy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from userbuy
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userbuy
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xyh.domain.UserbuyExample" >
    delete from userbuy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xyh.domain.Userbuy" >
    insert into userbuy (id, userid, ele, 
      water, buytime, buytimeString
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{ele,jdbcType=INTEGER}, 
      #{water,jdbcType=INTEGER}, #{buytime,jdbcType=TIMESTAMP}, #{buytimestring,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xyh.domain.Userbuy" >
    insert into userbuy
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="ele != null" >
        ele,
      </if>
      <if test="water != null" >
        water,
      </if>
      <if test="buytime != null" >
        buytime,
      </if>
      <if test="buytimestring != null" >
        buytimeString,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="ele != null" >
        #{ele,jdbcType=INTEGER},
      </if>
      <if test="water != null" >
        #{water,jdbcType=INTEGER},
      </if>
      <if test="buytime != null" >
        #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="buytimestring != null" >
        #{buytimestring,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xyh.domain.UserbuyExample" resultType="java.lang.Integer" >
    select count(*) from userbuy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update userbuy
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.ele != null" >
        ele = #{record.ele,jdbcType=INTEGER},
      </if>
      <if test="record.water != null" >
        water = #{record.water,jdbcType=INTEGER},
      </if>
      <if test="record.buytime != null" >
        buytime = #{record.buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buytimestring != null" >
        buytimeString = #{record.buytimestring,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update userbuy
    set id = #{record.id,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      ele = #{record.ele,jdbcType=INTEGER},
      water = #{record.water,jdbcType=INTEGER},
      buytime = #{record.buytime,jdbcType=TIMESTAMP},
      buytimeString = #{record.buytimestring,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xyh.domain.Userbuy" >
    update userbuy
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="ele != null" >
        ele = #{ele,jdbcType=INTEGER},
      </if>
      <if test="water != null" >
        water = #{water,jdbcType=INTEGER},
      </if>
      <if test="buytime != null" >
        buytime = #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="buytimestring != null" >
        buytimeString = #{buytimestring,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xyh.domain.Userbuy" >
    update userbuy
    set userid = #{userid,jdbcType=INTEGER},
      ele = #{ele,jdbcType=INTEGER},
      water = #{water,jdbcType=INTEGER},
      buytime = #{buytime,jdbcType=TIMESTAMP},
      buytimeString = #{buytimestring,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selbyname" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * from userbuy WHERE userid=(SELECT id FROM user WHERE username=#{username,jdbcType=VARCHAR})
  </select>
</mapper>