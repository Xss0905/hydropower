<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xyh.mapper.DetailedMapper" >
  <resultMap id="BaseResultMap" type="com.xyh.domain.Detailed" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="watermoney" property="watermoney" jdbcType="INTEGER" />
    <result column="elemoney" property="elemoney" jdbcType="INTEGER" />
    <result column="income" property="income" jdbcType="INTEGER" />
    <result column="surwater" property="surwater" jdbcType="INTEGER" />
    <result column="surele" property="surele" jdbcType="INTEGER" />
    <result column="usercount" property="usercount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, watermoney, elemoney, income, surwater, surele, usercount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xyh.domain.DetailedExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from detailed
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from detailed
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from detailed
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xyh.domain.DetailedExample" >
    delete from detailed
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xyh.domain.Detailed" >
    insert into detailed (id, watermoney, elemoney, 
      income, surwater, surele, 
      usercount)
    values (#{id,jdbcType=INTEGER}, #{watermoney,jdbcType=INTEGER}, #{elemoney,jdbcType=INTEGER}, 
      #{income,jdbcType=INTEGER}, #{surwater,jdbcType=INTEGER}, #{surele,jdbcType=INTEGER}, 
      #{usercount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xyh.domain.Detailed" >
    insert into detailed
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="watermoney != null" >
        watermoney,
      </if>
      <if test="elemoney != null" >
        elemoney,
      </if>
      <if test="income != null" >
        income,
      </if>
      <if test="surwater != null" >
        surwater,
      </if>
      <if test="surele != null" >
        surele,
      </if>
      <if test="usercount != null" >
        usercount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="watermoney != null" >
        #{watermoney,jdbcType=INTEGER},
      </if>
      <if test="elemoney != null" >
        #{elemoney,jdbcType=INTEGER},
      </if>
      <if test="income != null" >
        #{income,jdbcType=INTEGER},
      </if>
      <if test="surwater != null" >
        #{surwater,jdbcType=INTEGER},
      </if>
      <if test="surele != null" >
        #{surele,jdbcType=INTEGER},
      </if>
      <if test="usercount != null" >
        #{usercount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xyh.domain.DetailedExample" resultType="java.lang.Integer" >
    select count(*) from detailed
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update detailed
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.watermoney != null" >
        watermoney = #{record.watermoney,jdbcType=INTEGER},
      </if>
      <if test="record.elemoney != null" >
        elemoney = #{record.elemoney,jdbcType=INTEGER},
      </if>
      <if test="record.income != null" >
        income = #{record.income,jdbcType=INTEGER},
      </if>
      <if test="record.surwater != null" >
        surwater = #{record.surwater,jdbcType=INTEGER},
      </if>
      <if test="record.surele != null" >
        surele = #{record.surele,jdbcType=INTEGER},
      </if>
      <if test="record.usercount != null" >
        usercount = #{record.usercount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update detailed
    set id = #{record.id,jdbcType=INTEGER},
      watermoney = #{record.watermoney,jdbcType=INTEGER},
      elemoney = #{record.elemoney,jdbcType=INTEGER},
      income = #{record.income,jdbcType=INTEGER},
      surwater = #{record.surwater,jdbcType=INTEGER},
      surele = #{record.surele,jdbcType=INTEGER},
      usercount = #{record.usercount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xyh.domain.Detailed" >
    update detailed
    <set >
      <if test="watermoney != null" >
        watermoney = #{watermoney,jdbcType=INTEGER},
      </if>
      <if test="elemoney != null" >
        elemoney = #{elemoney,jdbcType=INTEGER},
      </if>
      <if test="income != null" >
        income = #{income,jdbcType=INTEGER},
      </if>
      <if test="surwater != null" >
        surwater = #{surwater,jdbcType=INTEGER},
      </if>
      <if test="surele != null" >
        surele = #{surele,jdbcType=INTEGER},
      </if>
      <if test="usercount != null" >
        usercount = #{usercount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xyh.domain.Detailed" >
    update detailed
    set watermoney = #{watermoney,jdbcType=INTEGER},
      elemoney = #{elemoney,jdbcType=INTEGER},
      income = #{income,jdbcType=INTEGER},
      surwater = #{surwater,jdbcType=INTEGER},
      surele = #{surele,jdbcType=INTEGER},
      usercount = #{usercount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>